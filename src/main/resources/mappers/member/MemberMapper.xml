<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberMapper">
    <resultMap id="MemberVo" type="com.bitcamp.sc.domain.member.domain.Member">
        <result property="idx" column="id"/>
        <result property="email" column="email"/>
        <result property="pw" column="pw" />
        <result property="name" column="name" />
        <result property="code" column="code" />
    </resultMap>

    <!-- 로그인할 때 사용 - 이메일 + 비밀번호로 멤버객체 조회하기 -->
    <select id="findByEmailPw" parameterType="string"
            resultMap="MemberVo"
    >
        select *
        from member
        where email = #{email}
          and pw = #{pw}
    </select>

    <!-- 로그인할 때 사용 - 이메일로 멤버객체 조회 -->
    <select id="findByEmail" parameterType="string"
            resultMap="MemberVo"
    >
        select *
        from member
        where email = #{email}
    </select>

    <!-- 회원가입 -->
    <insert id="save"
            parameterType="com.bitcamp.sc.domain.member.domain.Member"
            useGeneratedKeys="true"
            keyProperty="idx"
    >
        insert into member (email, pw, name, phone)
        values (#{email}, #{pw}, #{name}, #{phone})
    </insert>

    <!-- 이메일 찾기 -->
    <select id="findByNameAndPhone"
            resultMap="MemberVo"
            parameterType="string"
    >
        select email
        from member
        where name = #{name}
          and phone = #{phone}
    </select>

    <!-- 비밀번호 찾기 -->
    <select id="findByNameAndEmail" parameterType="string"
            resultMap="MemberVo">
        select email
        from member
        where name = #{name}
          and email = #{email}
    </select>

    <!-- 비밀번호 찾기 중 인증번호 저장하기 -->
    <update id="updateCode" parameterType="String">
        update member
        set code=#{code}
        where email = #{email}
    </update>

    <!-- 비밀번호 찾기 중 새로운 비밀번호 생성 -->
    <update id="updatePw" parameterType="string">
        update member
        set pw = #{pw}
        where email = #{email}
    </update>

    <select id="findByMidx" parameterType="long"
            resultMap="MemberVo">
        select *
        from member
        where id = #{idx}
    </select>

    <!-- 회원 수정 에서 기존 비밀번호 확인하기 -->
    <select id="selectPw" parameterType="long" resultType="String">
        select pw
        from member
        where id = #{idx}
    </select>




    <!-- 회원 탈퇴 -->
    <delete id="deleteMember" parameterType="long">
        DELETE FROM member WHERE id=#{idx};
    </delete>

</mapper>